@using System.Web.Mvc.Html
@model RSI.Models.Doctors
@using System.Security.Policy
@using Microsoft.Ajax.Utilities

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@{ Html.BeginForm(); }

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.DRID)

        <div class="form-group">
            @Html.LabelFor(model => model.Rank, htmlAttributes: new {@class = "control-label col-md-1"})
            <div class="col-md-3">
                @Html.EditorFor(model => model.Rank, new {htmlAttributes = new {@class = "form-control", @readonly = "readonly" } })
            </div>
            @Html.LabelFor(model => model.Publications, htmlAttributes: new {@class = "control-label col-md-1"})
            <div class="col-md-3">
                @Html.EditorFor(model => model.Publications, new {htmlAttributes = new {@class = "form-control", @readonly = "readonly" } })
            </div>
            @Html.Label("Recent Date", htmlAttributes: new {@class = "control-label col-md-1", @style = "white-space: nowrap;" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.RecentDate, new {htmlAttributes = new {@class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NPI, htmlAttributes: new {@class = "control-label col-md-1"})
            <div class="col-md-3">
                @Html.EditorFor(model => model.NPI, new {htmlAttributes = new {@class = "form-control", @readonly = "readonly" } })
            </div>
            @Html.Label("Reviewer ID", htmlAttributes: new {@class = "control-label col-md-1", @style = "white-space: nowrap;" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.REVIEWER_ID, new {htmlAttributes = new {@class = "form-control", @readonly = "readonly" } })
            </div>
            <div class="col-md-4"></div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Specialty, htmlAttributes: new {@class = "control-label col-md-1"})
            <div class="col-md-3">
                @Html.EditorFor(model => model.Specialty, new {htmlAttributes = new {@class = "form-control"} })
                @Html.ValidationMessageFor(model => model.Specialty, "", new {@class = "text-danger"})
            </div>
            <div class="col-md-3" style="white-space: nowrap;">
                <span id="specialtiesArrow" class="glyphicon glyphicon-arrow-left pull-left" style="display: none;"></span>
                @Html.DropDownList(
                    "specialtiesList",
                    (IEnumerable<SelectListItem>) ViewBag.Specialties,
                    "Change specialty",
                    new {@class = "form-control pull-right", style = "width: 210px; height: 32px; display: none;"})
            </div>
        </div>

        <div class="form-group">
            @Html.Label("First Name", htmlAttributes: new {@class = "control-label col-md-1", @style = "white-space: nowrap;" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.First_Name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.First_Name, "", new {@class = "text-danger"})
            </div>

            @Html.Label("Last Name", htmlAttributes: new {@class = "control-label col-md-1", @style = "white-space: nowrap;" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Last_Name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Last_Name, "", new {@class = "text-danger"})
            </div>
            <div class="col-md-4"></div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new {@class = "control-label col-md-1"})
            <div class="col-md-3">
                @Html.EditorFor(model => model.Address, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Address, "", new {@class = "text-danger"})
            </div>

            @Html.LabelFor(model => model.City, htmlAttributes: new {@class = "control-label col-md-1"})
            <div class="col-md-2">
                @Html.EditorFor(model => model.City, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.City, "", new {@class = "text-danger"})
            </div>
        
            @Html.LabelFor(model => model.State, htmlAttributes: new {@class = "control-label col-md-1"})
            <div class="col-md-1">
                @Html.EditorFor(model => model.State, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.State, "", new {@class = "text-danger"})
            </div>

            @Html.LabelFor(model => model.Zipcode, htmlAttributes: new {@class = "control-label col-md-1"})
            <div class="col-md-2">
                @Html.EditorFor(model => model.Zipcode, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Zipcode, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new {@class = "control-label col-md-1"})
            <div class="col-md-3">
                @Html.EditorFor(model => model.Phone, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Phone, "", new {@class = "text-danger"})
            </div>

            @Html.LabelFor(model => model.Fax, htmlAttributes: new {@class = "control-label col-md-1"})
            <div class="col-md-3">
                @Html.EditorFor(model => model.Fax, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Fax, "", new {@class = "text-danger"})
            </div>
            <div class="col-md-4"></div>
        </div>

        <div class="form-group">
            @Html.Label("Email", htmlAttributes: new {@class = "control-label col-md-1"})
            <div class="col-md-3">
                @Html.EditorFor(model => model.Email_Address, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Email_Address, "", new {@class = "text-danger"})
            </div>

            @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Website, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Website, "", new {@class = "text-danger"})
            </div>
            <div class="col-md-4"></div>
        </div>

        <div class="form-group">
            @Html.Label("Company", htmlAttributes: new {@class = "control-label col-md-1"})
            <div class="col-md-3">
                @Html.EditorFor(model => model.Company_Name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Company_Name, "", new {@class = "text-danger"})
            </div>
            <div class="col-md-8"></div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.County, htmlAttributes: new {@class = "control-label col-md-1"})
            <div class="col-md-3">
                @Html.EditorFor(model => model.County, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.County, "", new {@class = "text-danger"})
            </div>

            @Html.LabelFor(model => model.Timezone, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Timezone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Timezone, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.Latitude)
        @Html.HiddenFor(model => model.Longitude)

        <div class="form-group">
            <div class="col-md-offset-10 col-md-2 pull-right">
                <input type="submit" value="Save" class="btn btn-default"/>
            </div>
        </div>
    </div>
    <p>
        @Ajax.ActionLink(
            "Back to List",
            "Index",
            new RouteValueDictionary(
                    new
                    {
                        controller = "Doctors",
                        action = "Index",
                        id = string.Empty,
                        sortOrder = ViewBag.SortOrder,
                        page = ViewBag.PageNumber,
                        specialtyFilter = ViewBag.SpecialtyFilter,
                        rankFilter = ViewBag.RankFilter,
                        stateFilter = ViewBag.StateFilter
                    }),
            new AjaxOptions {HttpMethod = "POST"})
    </p>
@{ Html.EndForm();}

@section scripts{
    <script language="javascript" type="text/javascript">
        $("#Specialty")
            .click(function() {
                $("#specialtiesList").toggle(500, function() {});
                $("#specialtiesArrow").toggle(300, function() {});
            });
        $("#specialtiesList")
            .change(function () {
                if ($(this).find("option:selected").val() !== "") {
                    $("#Specialty").val($(this).find("option:selected").text());
                    $("#specialtiesList").toggle(500, function() {});
                    $("#specialtiesArrow").toggle(300, function() {});
                } else {
                    $("#Specialty").val('');
                    $("#specialtiesList").toggle(500, function () { });
                    $("#specialtiesArrow").toggle(300, function () { });
                }
            });
        $(document).click(function () {
            $("#specialtiesList").hide(500, function () { });
            $("#specialtiesArrow").hide(300, function () { });
        });
        $("#Specialty").click(function (e) {
            e.stopPropagation(); 
            return false;        
        });
        $("#specialtiesList").click(function (e) {
            e.stopPropagation(); 
            return false;        
        });
    </script>
}
