@using RSI.Cashed
@model RSI.Models.Doctors

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@{ Html.BeginForm(); }

@Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr/>
    @Html.ValidationSummary(true, "", new {@class = "text-danger"})
    @Html.HiddenFor(model => model.DRID)
    
    <div class="form-group">
        @Html.LabelFor(model => model.Rank, new { @class = "control-label col-md-1" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.Rank, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
        @Html.LabelFor(model => model.Publications, new { @class = "control-label col-md-1" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.Publications, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
        @Html.Label("Recent Date", new { @class = "control-label col-md-1", style = "white-space:nowrap;" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.RecentDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @if (ViewBag.Country.Equals("0"))
        {
            @Html.LabelFor(model => model.NPI, new {@class = "control-label col-md-1"})
            <div class="col-md-3">
                @Html.EditorFor(model => model.NPI, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        }
        else
        {
            @Html.HiddenFor(model => model.NPI)
        }
        
        @Html.Label("Reviewer ID", new {@class = "control-label col-md-1", style = "white-space:nowrap;"})
        <div class="col-md-3">
            @Html.EditorFor(model => model.REVIEWER_ID, new {htmlAttributes = new {@class = "form-control", @readonly = "readonly"}})
        </div>
        @Html.Label("Credentials", new {@class = "control-label col-md-1", style = "white-space:nowrap;"})
        <div class="col-md-1">
            @Html.EditorFor(model => model.Credentials, new {htmlAttributes = new {@class = "form-control", @readonly = "readonly"}})
        </div>
        @Html.Label("Gender", new {@class = "control-label col-md-1", style = "white-space:nowrap;"})
        <div class="col-md-1">
            @Html.EditorFor(model => model.Gender, new {htmlAttributes = new {@class = "form-control", @readonly = "readonly"}})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Specialty, new { @class = "control-label col-md-1" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.Specialty, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Specialty, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-3" style="white-space: nowrap;">
            <span id="specialtiesArrow" class="glyphicon glyphicon-arrow-left pull-left" style="display: none;"></span>
            @Html.DropDownList(
                "specialtiesList",
                (IEnumerable<SelectListItem>)ViewBag.Specialties,
                "Change specialty",
                new { @class = "form-control pull-right", style = "display:none;height:32px;width:210px;" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("First Name", new { @class = "control-label col-md-1", style = "white-space:nowrap;" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.First_Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.First_Name, "", new { @class = "text-danger" })
        </div>

        @Html.Label("Last Name", new { @class = "control-label col-md-1", style = "white-space:nowrap;" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.Last_Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Last_Name, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-4"></div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, new { @class = "control-label col-md-1" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>

        @Html.LabelFor(model => model.City, new { @class = "control-label col-md-1" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
        
        @if (ViewBag.Country.Equals("0"))
        {
            @Html.LabelFor(model => model.State, new {@class = "control-label col-md-1"})
            <div class="col-md-1">
                @Html.EditorFor(model => model.State, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.State, "", new {@class = "text-danger"})
            </div>
        }
        else if (ViewBag.Country.Equals(CountriesList.Instance.GetIndexByCode("CAN")))
        {
            @Html.Label("Province", new { @class = "control-label col-md-1" })
            <div class="col-md-1">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        }
        else
        {
            @Html.HiddenFor(model => model.State)
        }

        @if (ViewBag.Country.Equals("0"))
        {
            @Html.LabelFor(model => model.Zipcode, new {@class = "control-label col-md-1"})
            <div class="col-md-2">
                @Html.EditorFor(model => model.Zipcode, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Zipcode, "", new {@class = "text-danger"})
            </div>
        }
        else
        {
            @Html.Label("Postal Code", new { @class = "control-label col-md-1", style = "white-space:nowrap;" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Zipcode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Zipcode, "", new { @class = "text-danger" })
            </div>
        }
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Phone, new { @class = "control-label col-md-1" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
        </div>

        @Html.LabelFor(model => model.Fax, new { @class = "control-label col-md-1" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-4"></div>
    </div>

    <div class="form-group">
        @Html.Label("Email", new { @class = "control-label col-md-1" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.Email_Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email_Address, "", new { @class = "text-danger" })
        </div>

        @Html.LabelFor(model => model.Website, new { @class = "control-label col-md-1" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-4"></div>
    </div>

    <div class="form-group">
        @Html.Label("Company", new { @class = "control-label col-md-1" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.Company_Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Company_Name, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-8"></div>
    </div>

    <div class="form-group">
    @if (ViewBag.Country.Equals("0"))
    {

        @Html.LabelFor(model => model.County, new { @class = "control-label col-md-1" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.County, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.County, "", new { @class = "text-danger" })
        </div>

        @Html.LabelFor(model => model.Timezone, new { @class = "control-label col-md-1" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.Timezone, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Timezone, "", new {@class = "text-danger"})
        </div>
    }
    else
    {
        @Html.HiddenFor(model => model.County)
        @Html.HiddenFor(model => model.Timezone)
    }
    </div>
    
    <div class="form-group">
        @Html.HiddenFor(model => model.Latitude)
        @Html.HiddenFor(model => model.Longitude)
        @Html.HiddenFor(model => model.Taxonomy_Code)
        @Html.HiddenFor(model => model.Taxonomy_Classification)
        @Html.HiddenFor(model => model.Taxonomy_Specialization)
        @Html.HiddenFor(model => model.License_Number)
        @Html.HiddenFor(model => model.License_State)
        @Html.HiddenFor(model => model.Medical_School)
        @Html.HiddenFor(model => model.Residency_Training)
        @Html.HiddenFor(model => model.Graduation_Year)
        @Html.HiddenFor(model => model.Patients)
        @Html.HiddenFor(model => model.Claims)
        @Html.HiddenFor(model => model.Prescriptions)
        @Html.HiddenFor(model => model.Country)
    </div>
    
    <div class="form-group">
        <div class="col-md-offset-10 col-md-2 pull-right">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
<p>
    @Ajax.ActionLink(
        "Back to List",
        "Index",
        new RouteValueDictionary(
            new
            {
                controller = "Doctors",
                action = "Index",
                id = string.Empty,
                sortorder = ViewBag.CurrentSort,
                page = ViewBag.PageNumber,
                specialtyFilter = ViewBag.SpecialtyFilter,
                rankFilter = ViewBag.RankFilter,
                stateFilter = ViewBag.StateFilter,
                countryId = ViewBag.Country
            }),
        new AjaxOptions {HttpMethod = "POST"})
</p>
@{ Html.EndForm(); }

@section scripts{
    <script language="javascript" type="text/javascript">
        $("#Specialty")
            .click(function() {
                $("#specialtiesList").toggle(500, function() {});
                $("#specialtiesArrow").toggle(300, function() {});
            });
        $("#specialtiesList")
            .change(function() {
                if ($(this).find("option:selected").val() !== "") {
                    $("#Specialty").val($(this).find("option:selected").text());
                    $("#specialtiesList").toggle(500, function() {});
                    $("#specialtiesArrow").toggle(300, function() {});
                } else {
                    $("#Specialty").val('');
                    $("#specialtiesList").toggle(500, function() {});
                    $("#specialtiesArrow").toggle(300, function() {});
                }
            });
        $(document)
            .click(function() {
                $("#specialtiesList").hide(500, function() {});
                $("#specialtiesArrow").hide(300, function() {});
            });
        $("#Specialty")
            .click(function(e) {
                e.stopPropagation();
                return false;
            });
        $("#specialtiesList")
            .click(function(e) {
                e.stopPropagation();
                return false;
            });
    </script>
}